{"remainingRequest":"/Users/anastasiaromanova/Desktop/3 курсовая решение/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/anastasiaromanova/Desktop/3 курсовая решение/src/components/AppStatus.vue?vue&type=template&id=3b415ff3","dependencies":[{"path":"/Users/anastasiaromanova/Desktop/3 курсовая решение/src/components/AppStatus.vue","mtime":1631363555394},{"path":"/Users/anastasiaromanova/Desktop/3 курсовая решение/node_modules/cache-loader/dist/cjs.js","mtime":1631183916279},{"path":"/Users/anastasiaromanova/Desktop/3 курсовая решение/node_modules/babel-loader/lib/index.js","mtime":1631183916427},{"path":"/Users/anastasiaromanova/Desktop/3 курсовая решение/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1631183916581},{"path":"/Users/anastasiaromanova/Desktop/3 курсовая решение/node_modules/cache-loader/dist/cjs.js","mtime":1631183916279},{"path":"/Users/anastasiaromanova/Desktop/3 курсовая решение/node_modules/vue-loader-v16/dist/index.js","mtime":1631183916480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHNwYW4gOmNsYXNzPSJbJ2JhZGdlJywgY2xhc3NOYW1lXSI+e3t0ZXh0fX08L3NwYW4+Cg=="},{"version":3,"sources":["/Users/anastasiaromanova/Desktop/3 курсовая решение/src/components/AppStatus.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/anastasiaromanova/Desktop/3 курсовая решение/src/components/AppStatus.vue","sourceRoot":"","sourcesContent":["<template>\n  <span :class=\"['badge', className]\">{{text}}</span>\n</template>\n\n\n<script>\nimport {watch, ref} from 'vue'\n\nexport default {\n  props: {\n    type: String,\n    validator(value) {\n      return ['active', 'done', 'pending', 'cancelled'].includes(value)\n    } \n  },\n  setup(props) {\n    const classesMap = {\n      active: 'primary',\n      cancelled: 'danger',\n      done: 'primary',\n      pending: 'warning'\n    }\n\n    const textMap = {\n      active: 'Активен',\n      cancelled: 'Отменен',\n      done: 'Завершен',\n      pending: 'Выполняется'\n    }\n\n    const className = ref(classesMap[props.type])\n    const text = ref(textMap[props.type])\n\n    watch(props, val => {\n      className.value = classesMap[val.type]\n      text.value = textMap[val.type]\n    })\n\n    return {\n      className, text\n    }\n  }\n}\n</script>\n"]}]}